<?xml version="1.0" encoding="UTF-8" standalone="no" ?>
<Application>

  <Header>
    <Version val="13021"/>
    <WithIsn val="Y"/>
    <_InternalTask val="N"/>
    <IsRoot val="N"/>
    <InIndex val="N"/>
    <UniqueISNConvState val="12"/>
  </Header>

  <ProgramsRepository>
    <Programs>
      <Task MainProgram="N">
        <Header Description="בדיקת תקינות חשבון בנק .NET" ISN_2="1" LastIsn="1" id="963">
          <ExecutionRight comp="-1"/>
          <Resident val="N"/>
          <SQL val="N"/>
          <ReturnValue>
            <ReturnValueAttr MgAttr="B"/>
            <TSK_PARAMS val="4"/>
            <ParametersAttributes>
              <Attr MgAttr="N"/>
              <Attr MgAttr="N"/>
              <Attr MgAttr="N"/>
              <Attr MgAttr="B"/>
            </ParametersAttributes>
          </ReturnValue>
          <SqlWhereExist val="N"/>
          <TaskType val="B"/>
          <External val="N"/>
          <Offline val="N"/>
          <FormType val="N"/>
          <DotNetObjectExists val="Y"/>
          <LastModified _date="738503" _time="63849" date="14/12/2022" time="17:44:09"/>
        </Header>
        <ReturnValueExpression val="8"/>
        <ItemIsn val="5"/>
        <Resource>
          <Columns>
            <Column id="1" name="פ-בנק">
              <PropertyList model="FIELD">
                <Model attr_obj="FIELD_NUMERIC" id="1"/>
                <Picture id="157" valUnicode="3"/>
                <_Dec id="181"/>
                <_Whole id="182" val="3"/>
                <_Negative id="192"/>
                <_FieldStyle id="276" val="1"/>
              </PropertyList>
            </Column>
            <Column id="2" name="פ-סניף">
              <PropertyList model="FIELD">
                <Model attr_obj="FIELD_NUMERIC" id="1"/>
                <Picture id="157" valUnicode="5"/>
                <_Dec id="181"/>
                <_Whole id="182" val="5"/>
                <_Negative id="192"/>
                <_FieldStyle id="276" val="1"/>
              </PropertyList>
            </Column>
            <Column id="3" name="פ-חשבון">
              <PropertyList model="FIELD">
                <Model attr_obj="FIELD_NUMERIC" id="1"/>
                <Picture id="157" valUnicode="10"/>
                <_Dec id="181"/>
                <_Whole id="182" val="10"/>
                <_Negative id="192"/>
                <_FieldStyle id="276" val="1"/>
              </PropertyList>
            </Column>
            <Column id="5" name="פא-ללא הודעות שגיאה">
              <PropertyList model="FIELD">
                <Model attr_obj="FIELD_LOGICAL" id="1"/>
                <_FieldStyle id="276" val="1"/>
              </PropertyList>
            </Column>
            <Column id="4" name="מ-תוצאה">
              <PropertyList model="FIELD">
                <Model attr_obj="FIELD_NUMERIC" id="1"/>
                <Picture id="157" valUnicode="1"/>
                <_Dec id="181"/>
                <_Whole id="182" val="1"/>
                <_Negative id="192"/>
                <_FieldStyle id="276" val="1"/>
              </PropertyList>
            </Column>
          </Columns>
        </Resource>
        <Information>
          <Key>
            <Mode val="N"/>
          </Key>
          <DB comp="-1"/>
          <Sort>
            <CLS val="A"/>
          </Sort>
          <ForceRecordDelete DEL="N"/>
          <EndTaskCondition val="Y"/>
          <EvaluateEndCondition val="A"/>
          <InitialMode val="M"/>
          <Locate Direction="A"/>
          <Range Direction="A"/>
          <VarRange/>
          <TaskProperties>
            <SelectionTable val="N"/>
            <ConfirmUpdate CNFU="N"/>
            <ConfirmCancel val="N"/>
            <ErrorStrategy val="A"/>
            <LockingStrategy val="M"/>
            <CacheStrategy val="T"/>
            <ForceRecordSuffix val="N"/>
            <TransactionMode val="P"/>
            <TransactionBegin val="N"/>
            <PreloadView val="N"/>
            <AllowEmptyDataview val="N"/>
            <KeepCreatedContext val="N"/>
          </TaskProperties>
          <SIDE_WIN>
            <AllowOptions val="N"/>
            <AllowQuery val="Y"/>
            <AllowModify val="Y"/>
            <AllowCreate val="Y"/>
            <AllowDelete val="Y"/>
            <AllowLocate val="Y"/>
            <AllowRange val="Y"/>
            <AllowIndexChange val="Y"/>
            <AllowSorting val="Y"/>
            <AllowIOFiles val="Y"/>
            <RecordCycle val="Y"/>
            <AllowEvents val="Y"/>
            <AllowIndexOptimization val="Y"/>
            <AllowLocationInQuery val="Y"/>
            <AllowPrintingData val="N"/>
          </SIDE_WIN>
          <WIN>
            <OpenTaskWindow val="N"/>
            <CloseTaskWindow val="Y"/>
            <ForegroundWindow val="Y"/>
            <FlipFld val="N"/>
            <RefreshTaskWindow ReturnValue="N"/>
          </WIN>
          <BOX>
            <Direction val="V"/>
          </BOX>
        </Information>
        <TaskLogic>
          <LogicUnit id="1" propagate="78">
            <Level val="R"/>
            <Type val="M"/>
            <Scope val="S"/>
            <EngineDirective val="S"/>
            <ShowMessage val="Y"/>
            <Condition val="89"/>
            <Event>
              <EventType val="S"/>
              <PublicObject comp="-1"/>
            </Event>
            <LogicLines>
              <LogicLine>
                <DATAVIEW_SRC FlowIsn="1" Type="M">
                  <Condition val="N"/>
                  <Modifier val="B"/>
                  <Direction val="C"/>
                </DATAVIEW_SRC>
              </LogicLine>
              <LogicLine>
                <Select FieldID="1" FlowIsn="4" id="1">
                  <Column val="1"/>
                  <Type val="V"/>
                  <IsParameter val="Y"/>
                  <DIFF_UPDATE val="T"/>
                  <Condition val="Y"/>
                  <Modifier val="S"/>
                  <Direction val="C"/>
                </Select>
              </LogicLine>
              <LogicLine>
                <Select FieldID="2" FlowIsn="5" id="2">
                  <Column val="2"/>
                  <Type val="V"/>
                  <IsParameter val="Y"/>
                  <DIFF_UPDATE val="T"/>
                  <Condition val="Y"/>
                  <Modifier val="S"/>
                  <Direction val="C"/>
                </Select>
              </LogicLine>
              <LogicLine>
                <Select FieldID="3" FlowIsn="6" id="3">
                  <Column val="3"/>
                  <Type val="V"/>
                  <IsParameter val="Y"/>
                  <DIFF_UPDATE val="T"/>
                  <Condition val="Y"/>
                  <Modifier val="S"/>
                  <Direction val="C"/>
                </Select>
              </LogicLine>
              <LogicLine>
                <Select FieldID="5" FlowIsn="28" id="5">
                  <Column val="5"/>
                  <Type val="V"/>
                  <IsParameter val="Y"/>
                  <DIFF_UPDATE val="T"/>
                  <Condition val="Y"/>
                  <Modifier val="S"/>
                  <Direction val="C"/>
                </Select>
              </LogicLine>
              <LogicLine>
                <Select FieldID="4" FlowIsn="8" id="4">
                  <Column val="4"/>
                  <Type val="V"/>
                  <IsParameter val="N"/>
                  <DIFF_UPDATE val="T"/>
                  <Condition val="Y"/>
                  <Modifier val="S"/>
                  <Direction val="C"/>
                </Select>
              </LogicLine>
            </LogicLines>
          </LogicUnit>
          <LogicUnit id="3" propagate="78">
            <Level val="T"/>
            <Type val="S"/>
            <Scope val="S"/>
            <EngineDirective val="S"/>
            <ShowMessage val="Y"/>
            <Condition val="89"/>
            <Event>
              <EventType val="S"/>
              <PublicObject comp="-1"/>
            </Event>
            <Expanded val="1"/>
            <LogicLines>
              <LogicLine>
                <BLOCK EndBlock="17" EndBlockSegment="19" FlowIsn="16" Type="I">
                  <Condition Exp="5"/>
                  <Modifier val="B"/>
                  <Direction val="C"/>
                </BLOCK>
              </LogicLine>
              <LogicLine>
                <STP Buttons="O" DefaultButton="1" ERR_LOG_DEF_CHG="N" FlowIsn="18" IMG_DEF_CHG="Y" Image="C" Mode="W" TTL_DEF_CHG="Y" TXT="חובה להזין בנק" TitleTxt="שגיאה" VR_DISP="B">
                  <AppendToErrorLog val="N"/>
                  <Condition Exp="9"/>
                  <Modifier val="B"/>
                  <Direction val="C"/>
                </STP>
              </LogicLine>
              <LogicLine>
                <BLOCK EndBlock="17" EndBlockSegment="21" FlowIsn="19" Type="E">
                  <Condition Exp="6"/>
                  <Modifier val="B"/>
                  <Direction val="C"/>
                </BLOCK>
              </LogicLine>
              <LogicLine>
                <STP Buttons="O" DefaultButton="1" ERR_LOG_DEF_CHG="N" FlowIsn="20" IMG_DEF_CHG="Y" Image="C" Mode="W" TTL_DEF_CHG="Y" TXT="חובה להזין סניף" TitleTxt="שגיאה" VR_DISP="B">
                  <AppendToErrorLog val="N"/>
                  <Condition Exp="9"/>
                  <Modifier val="B"/>
                  <Direction val="C"/>
                </STP>
              </LogicLine>
              <LogicLine>
                <BLOCK EndBlock="17" EndBlockSegment="23" FlowIsn="21" Type="E">
                  <Condition Exp="7"/>
                  <Modifier val="B"/>
                  <Direction val="C"/>
                </BLOCK>
              </LogicLine>
              <LogicLine>
                <STP Buttons="O" DefaultButton="1" ERR_LOG_DEF_CHG="N" FlowIsn="22" IMG_DEF_CHG="Y" Image="C" Mode="W" TTL_DEF_CHG="Y" TXT="חובה להזין חשבון" TitleTxt="שגיאה" VR_DISP="B">
                  <AppendToErrorLog val="N"/>
                  <Condition Exp="9"/>
                  <Modifier val="B"/>
                  <Direction val="C"/>
                </STP>
              </LogicLine>
              <LogicLine>
                <BLOCK EndBlock="17" EndBlockSegment="17" FlowIsn="23" Type="E">
                  <Condition val="Y"/>
                  <Modifier val="B"/>
                  <Direction val="C"/>
                </BLOCK>
              </LogicLine>
              <LogicLine>
                <Invoke FlowIsn="3">
                  <OperationType val="."/>
                  <TaskID comp="-1"/>
                  <Lock val="N"/>
                  <Arguments>
                    <Argument>
                      <Variable val="4"/>
                      <Skip val="N"/>
                      <DotNetType val="System.Double"/>
                    </Argument>
                    <Argument>
                      <Variable val="1"/>
                      <Skip val="N"/>
                      <Name val="_BankNumber"/>
                      <DotNetType val="System.Double"/>
                    </Argument>
                    <Argument>
                      <Variable val="2"/>
                      <Skip val="N"/>
                      <Name val="_Branch"/>
                      <DotNetType val="System.Double"/>
                    </Argument>
                    <Argument>
                      <Variable val="3"/>
                      <Skip val="N"/>
                      <Name val="_Account"/>
                      <DotNetType val="System.Double"/>
                    </Argument>
                  </Arguments>
                  <Wait val="Y"/>
                  <SyncData val="N"/>
                  <ReturnValue val="5"/>
                  <FunctionName val="func"/>
                  <SnippetCode val="using System;&#xA;using Microsoft.VisualBasic;&#xA;using System.Linq;&#xA;using System.Windows.Forms;&#xA;&#xA;public static class Snippet&#xA;{&#xA;&#x9;public static System.Double func(System.Double _BankNumber, System.Double _Branch, System.Double _Account)&#xA;&#x9;{&#xA;&#x9;&#x9; &#xA;&#x9;&#x9;int result = CheckBankAccountValidity((int)_BankNumber,(int)_Branch,(int)_Account);&#xA;&#x9;&#x9;return (Double)result;&#xA;&#x9;}&#xA;&#x9;&#x9;public static int CheckBankAccountValidity(int lngBankNumber, int lngBranch, int lngAccount)&#xA;        {&#xA;            int fCheckBankAccountValidity;&#xA;&#xA;            try&#xA;            {   // On Error GoTo Err_בדיקה&#xA;&#xA;                fCheckBankAccountValidity = 0;&#xA;&#xA;                int lngRequiredAccountLength = 0;&#xA;                // VBto upgrade warning: lngTotal As int&#x9;OnWrite(double, int)&#xA;                int lngTotal;&#xA;&#xA;                string[] strArrayAccount = null;&#xA;                string[] strArrayBranch = null;&#xA;&#xA;                string strAccount;&#xA;                // VBto upgrade warning: strBranch As string&#x9;OnWrite(int, string)&#xA;                string strBranch;&#xA;&#x9;&#x9;&#x9;&#x9;// Return Bank Account length by bank number&#xA;                switch (lngBankNumber)&#xA;                {&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;case 18:&#xA;                        {&#xA;                            lngRequiredAccountLength = 9;&#xA;                            break;&#xA;                        }&#xA;                    case 10:&#xA;                    case 13:&#xA;                    case 34:&#xA;                        {&#xA;                            lngRequiredAccountLength = 8;&#xA;                            break;&#xA;                        }&#xA;                    case 12:&#xA;                    case 4:&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;case 26: //בנק יובנק התווסף ביום 17/02/2021&#xA;                        {&#xA;                            lngRequiredAccountLength = 6;&#xA;                            break;&#xA;                        }&#xA;                    case 11:&#xA;                    case 17:&#xA;                        {&#xA;                            lngRequiredAccountLength = 9;&#xA;                            break;&#xA;                        }&#xA;                    case 20:&#xA;                        {&#xA;                            lngRequiredAccountLength = 6;&#xA;                            break;&#xA;                        }&#xA;                    case 31:&#xA;                    case 52:&#xA;                        {&#xA;                            lngRequiredAccountLength = 9;&#xA;                            break;&#xA;                        }&#xA;                    case 9:&#xA;                        {&#xA;                            lngRequiredAccountLength = 9;&#xA;                            break;&#xA;                        }&#xA;                    case 22:&#xA;                        {&#xA;                            lngRequiredAccountLength = 9;&#xA;                            break;&#xA;                        }&#xA;                    case 46:&#xA;                        {&#xA;                            lngRequiredAccountLength = 9;&#xA;                            break;&#xA;                        }&#xA;                    case 14:&#xA;                        {&#xA;                            lngRequiredAccountLength = 9;&#xA;                            break;&#xA;                        }&#xA;                    case 54:&#xA;                        {&#xA;                            lngRequiredAccountLength = 9;&#xA;                            break;&#xA;                        }&#xA;                } //end switch&#xA;                strBranch = Convert.ToString(lngBranch);&#xA;                strAccount = Strings.StrDup(lngRequiredAccountLength - Convert.ToString(lngAccount).Length, &quot;0&quot;) + Convert.ToString(lngAccount);&#xA;                // strAccount = Right(&quot;0000000000&quot; &amp; CStr(lngAccount), lngRequiredAccountLength) ' This is an alternative to the previous line&#xA;                strAccount = Strings.StrConv(strAccount, VbStrConv.None, 0);&#xA;                //strArrayAccount = Strings.Split(strAccount, &quot;\0&quot;, -1, CompareMethod.Binary);&#xA;                strArrayAccount = strAccount.ToCharArray().Select(c => c.ToString()).ToArray();&#xA;&#xA;                if (lngBankNumber == 20 &amp;&amp; lngBranch > 400)&#xA;                { // אם מספר הסניף בבנק מזרחי-טפחות גדול מ400&#xA;                    strBranch = (Convert.ToString(lngBranch - 400)); // לפני החישובים יש להפחית 400&#xA;                }&#xA;                if (lngBankNumber == 20 &amp;&amp; lngBranch &lt; 400)&#xA;                { // אם מספר הסניף בבנק מזרחי-טפחות לא גדול מ400&#xA;                    strBranch = Convert.ToString(lngBranch); // לפני החישובים אל תבצע כלום&#xA;                }&#xA;                if (lngBankNumber == 12 || lngBankNumber == 4)&#xA;                {&#xA;                    strBranch = Convert.ToString(lngBranch);&#xA;                }&#xA;&#xA;                if (strBranch.Length &lt; 3)&#xA;                {&#xA;                    strBranch = Strings.StrDup(3 - strBranch.Length, &quot;0&quot;) + strBranch; // מוסיף אפסים להשלים ל3 ספרות&#xA;                }&#xA;                strBranch = Strings.StrConv(strBranch, VbStrConv.None, 0);&#xA;                //strArrayBranch = Strings.Split(strBranch, &quot;\0&quot;, -1, CompareMethod.Binary);&#xA;                strArrayBranch = strBranch.ToCharArray().Select(c => c.ToString()).ToArray();&#xA;&#xA;                switch (lngBankNumber)&#xA;                {&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;case 18:&#xA;                        {&#xA;                            &#xA;                            //                                                      snif&#xA;                            string x = strArrayBranch[0] + strArrayBranch[1] + strArrayBranch[2] + strArrayAccount[0] + strArrayAccount[1] + strArrayAccount[2] + strArrayAccount[3] + strArrayAccount[4] + strArrayAccount[5] + strArrayAccount[6]; // + strArrayAccount[7] + strArrayAccount[8];&#xA;                            string sifratBikoret = strArrayAccount[7] + strArrayAccount[8];&#xA;                            lngTotal = Convert.ToInt32(double.Parse(x));&#xA;                            int y = -(lngTotal % 97) + 98;&#xA;&#xA;                            if(y.ToString() == sifratBikoret)&#xA;                            {&#xA;                                fCheckBankAccountValidity = 1;&#xA;&#xA;                                break;&#xA;                            }&#xA;                            else&#xA;                            {&#xA;                                fCheckBankAccountValidity = 0;&#xA;                                break;&#xA;                            }&#xA;                            &#xA;                        }&#xA;                    case 10:&#xA;                    case 13:&#xA;                    case 34:&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;case 26: //בנק יובנק התווסף ביום 17/02/2021&#xA;                        {&#xA;&#xA;                            lngTotal = Convert.ToInt32(Convert.ToInt32(double.Parse(strArrayBranch[0])) * 10 + Convert.ToInt32(double.Parse(strArrayBranch[1])) * 9 + Convert.ToInt32(double.Parse(strArrayBranch[2])) * 8 + Convert.ToInt32(double.Parse(strArrayAccount[0])) * 7 + Convert.ToInt32(double.Parse(strArrayAccount[1])) * 6 + Convert.ToInt32(double.Parse(strArrayAccount[2])) * 5 + Convert.ToInt32(double.Parse(strArrayAccount[3])) * 4 + Convert.ToInt32(double.Parse(strArrayAccount[4])) * 3 + Convert.ToInt32(double.Parse(strArrayAccount[5])) * 2 + double.Parse(Strings.Right(Convert.ToString(lngAccount), 2)));&#xA;                            switch (Strings.Right(Convert.ToString(lngTotal), 2))&#xA;                            {&#xA;&#xA;                                case &quot;90&quot;:&#xA;                                case &quot;72&quot;:&#xA;                                case &quot;70&quot;:&#xA;                                case &quot;60&quot;:&#xA;                                case &quot;20&quot;:&#xA;                                    {&#xA;                                        fCheckBankAccountValidity = 1;&#xA;                                        break;&#xA;                                    }&#xA;                            } //end switch&#xA;&#xA;                            break;&#xA;                        }&#xA;                    case 12:&#xA;                        {&#xA;                            lngTotal = Convert.ToInt32(double.Parse(strArrayBranch[0])) * 9 + Convert.ToInt32(double.Parse(strArrayBranch[1])) * 8 + Convert.ToInt32(double.Parse(strArrayBranch[2])) * 7 + Convert.ToInt32(double.Parse(strArrayAccount[0])) * 6 + Convert.ToInt32(double.Parse(strArrayAccount[1])) * 5 + Convert.ToInt32(double.Parse(strArrayAccount[2])) * 4 + Convert.ToInt32(double.Parse(strArrayAccount[3])) * 3 + Convert.ToInt32(double.Parse(strArrayAccount[4])) * 2 + Convert.ToInt32(double.Parse(strArrayAccount[5])) * 1;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#xA;                            switch (lngTotal % 11)&#xA;                            {&#xA;&#xA;                                case 0:&#xA;                                case 2:&#xA;                                case 4:&#xA;                                case 6:&#xA;                                    {&#xA;                                        fCheckBankAccountValidity = 1;&#xA;&#xA;                                        break;&#xA;                                    }&#xA;                                default:&#xA;                                    {&#xA;                                        fCheckBankAccountValidity = 0;&#xA;                                        break;&#xA;                                    }&#xA;                            } //end switch&#xA;&#xA;                            break;&#xA;                        }&#xA;                    case 4:&#xA;                        {&#xA;                            lngTotal = Convert.ToInt32(double.Parse(strArrayBranch[0])) * 9 + Convert.ToInt32(double.Parse(strArrayBranch[1])) * 8 + Convert.ToInt32(double.Parse(strArrayBranch[2])) * 7 + Convert.ToInt32(double.Parse(strArrayAccount[0])) * 6 + Convert.ToInt32(double.Parse(strArrayAccount[1])) * 5 + Convert.ToInt32(double.Parse(strArrayAccount[2])) * 4 + Convert.ToInt32(double.Parse(strArrayAccount[3])) * 3 + Convert.ToInt32(double.Parse(strArrayAccount[4])) * 2 + Convert.ToInt32(double.Parse(strArrayAccount[5])) * 1;&#xA;                            switch (lngTotal % 11)&#xA;                            {&#xA;&#xA;                                case 0:&#xA;                                case 2:&#xA;                                    {&#xA;                                        fCheckBankAccountValidity = 1;&#xA;&#xA;                                        break;&#xA;                                    }&#xA;                                default:&#xA;                                    {&#xA;                                        fCheckBankAccountValidity = 0;&#xA;                                        break;&#xA;                                    }&#xA;                            } //end switch&#xA;                            break;&#xA;                        }&#xA;                    case 11:&#xA;                    case 17:&#xA;                        {&#xA;                            lngTotal = Convert.ToInt32(double.Parse(strArrayAccount[0])) * 9 + Convert.ToInt32(double.Parse(strArrayAccount[1])) * 8 + Convert.ToInt32(double.Parse(strArrayAccount[2])) * 7 + Convert.ToInt32(double.Parse(strArrayAccount[3])) * 6 + Convert.ToInt32(double.Parse(strArrayAccount[4])) * 5 + Convert.ToInt32(double.Parse(strArrayAccount[5])) * 4 + Convert.ToInt32(double.Parse(strArrayAccount[6])) * 3 + Convert.ToInt32(double.Parse(strArrayAccount[7])) * 2 + Convert.ToInt32(double.Parse(strArrayAccount[8])) * 1;&#xA;                            switch (lngTotal % 11)&#xA;                            {&#xA;&#xA;                                case 0:&#xA;                                case 2:&#xA;                                case 4:&#xA;                                    {&#xA;                                        fCheckBankAccountValidity = 1;&#xA;                                        break;&#xA;                                    }&#xA;                            } //end switch&#xA;                            break;&#xA;                        }&#xA;                    case 20:&#xA;                        {&#xA;                            lngTotal = Convert.ToInt32(double.Parse(strArrayBranch[0])) * 9 + Convert.ToInt32(double.Parse(strArrayBranch[1])) * 8 + Convert.ToInt32(double.Parse(strArrayBranch[2])) * 7 + Convert.ToInt32(double.Parse(strArrayAccount[0])) * 6 + Convert.ToInt32(double.Parse(strArrayAccount[1])) * 5 + Convert.ToInt32(double.Parse(strArrayAccount[2])) * 4 + Convert.ToInt32(double.Parse(strArrayAccount[3])) * 3 + Convert.ToInt32(double.Parse(strArrayAccount[4])) * 2 + Convert.ToInt32(double.Parse(strArrayAccount[5])) * 1;&#xA;                            switch (lngTotal % 11)&#xA;                            {&#xA;&#xA;                                case 0:&#xA;                                case 2:&#xA;                                case 4:&#xA;                                    {&#xA;                                        fCheckBankAccountValidity = 1;&#xA;                                        break;&#xA;                                    }&#xA;                            } //end switch&#xA;                            break;&#xA;                        }&#xA;                    case 31:&#xA;                    case 52:&#xA;                        {&#xA;                            lngTotal = Convert.ToInt32(double.Parse(strArrayAccount[0])) * 9 + Convert.ToInt32(double.Parse(strArrayAccount[1])) * 8 + Convert.ToInt32(double.Parse(strArrayAccount[2])) * 7 + Convert.ToInt32(double.Parse(strArrayAccount[3])) * 6 + Convert.ToInt32(double.Parse(strArrayAccount[4])) * 5 + Convert.ToInt32(double.Parse(strArrayAccount[5])) * 4 + Convert.ToInt32(double.Parse(strArrayAccount[6])) * 3 + Convert.ToInt32(double.Parse(strArrayAccount[7])) * 2 + Convert.ToInt32(double.Parse(strArrayAccount[8])) * 1;&#xA;                            switch (lngTotal % 11)&#xA;                            {&#xA;&#xA;                                case 0:&#xA;                                    {&#xA;                                        fCheckBankAccountValidity = 1;&#xA;                                        break;&#xA;                                    }&#xA;                                case 6:&#xA;                                    {&#xA;                                        fCheckBankAccountValidity = 1;&#xA;                                        break;&#xA;                                    }&#xA;                                default:&#xA;                                    {&#xA;                                        lngTotal = Convert.ToInt32(double.Parse(strArrayAccount[3])) * 6 + Convert.ToInt32(double.Parse(strArrayAccount[4])) * 5 + Convert.ToInt32(double.Parse(strArrayAccount[5])) * 4 + Convert.ToInt32(double.Parse(strArrayAccount[6])) * 3 + Convert.ToInt32(double.Parse(strArrayAccount[7])) * 2 + Convert.ToInt32(double.Parse(strArrayAccount[8])) * 1;&#xA;                                        switch (lngTotal % 11)&#xA;                                        {&#xA;&#xA;                                            case 0:&#xA;                                                {&#xA;                                                    fCheckBankAccountValidity = 1;&#xA;                                                    break;&#xA;                                                }&#xA;                                            case 6:&#xA;                                                {&#xA;                                                    fCheckBankAccountValidity = 1;&#xA;                                                    break;&#xA;                                                }&#xA;                                        } //end switch&#xA;                                        break;&#xA;                                    }&#xA;                            } //end switch&#xA;                            break;&#xA;                        }&#xA;                    case 9:&#xA;                        {&#xA;                            lngTotal = Convert.ToInt32(double.Parse(strArrayAccount[0])) * 9 + Convert.ToInt32(double.Parse(strArrayAccount[1])) * 8 + Convert.ToInt32(double.Parse(strArrayAccount[2])) * 7 + Convert.ToInt32(double.Parse(strArrayAccount[3])) * 6 + Convert.ToInt32(double.Parse(strArrayAccount[4])) * 5 + Convert.ToInt32(double.Parse(strArrayAccount[5])) * 4 + Convert.ToInt32(double.Parse(strArrayAccount[6])) * 3 + Convert.ToInt32(double.Parse(strArrayAccount[7])) * 2 + Convert.ToInt32(double.Parse(strArrayAccount[8])) * 1;&#xA;                            if (lngTotal % 10 == 0)&#xA;                            {&#xA;                                fCheckBankAccountValidity = 1;&#xA;                            }&#xA;                            break;&#xA;                        }&#xA;                    case 54:&#xA;                        {&#xA;                            fCheckBankAccountValidity = 1;&#xA;                            break;&#xA;                        }&#xA;                    case 22:&#xA;                        {&#xA;                            lngTotal = Convert.ToInt32(double.Parse(strArrayAccount[0])) * 3 + Convert.ToInt32(double.Parse(strArrayAccount[1])) * 2 + Convert.ToInt32(double.Parse(strArrayAccount[2])) * 7 + Convert.ToInt32(double.Parse(strArrayAccount[3])) * 6 + Convert.ToInt32(double.Parse(strArrayAccount[4])) * 5 + Convert.ToInt32(double.Parse(strArrayAccount[5])) * 4 + Convert.ToInt32(double.Parse(strArrayAccount[6])) * 3 + Convert.ToInt32(double.Parse(strArrayAccount[7])) * 2;&#xA;                            if (11 - (lngTotal % 11) == Convert.ToInt32(double.Parse(strArrayAccount[8])))&#xA;                            {&#xA;                                fCheckBankAccountValidity = 1;&#xA;                            }&#xA;                            break;&#xA;                        }&#xA;                    case 46:&#xA;                        {&#xA;                            lngTotal = Convert.ToInt32(double.Parse(strArrayBranch[0])) * 9 + Convert.ToInt32(double.Parse(strArrayBranch[1])) * 8 + Convert.ToInt32(double.Parse(strArrayBranch[2])) * 7 + Convert.ToInt32(double.Parse(strArrayAccount[3])) * 6 + Convert.ToInt32(double.Parse(strArrayAccount[4])) * 5 + Convert.ToInt32(double.Parse(strArrayAccount[5])) * 4 + Convert.ToInt32(double.Parse(strArrayAccount[6])) * 3 + Convert.ToInt32(double.Parse(strArrayAccount[7])) * 2 + Convert.ToInt32(double.Parse(strArrayAccount[8])) * 1;&#xA;                            switch (lngTotal % 11)&#xA;                            {&#xA;&#xA;                                case 0:&#xA;                                    {&#xA;                                        fCheckBankAccountValidity = 1;&#xA;                                        break;&#xA;                                    }&#xA;                                case 2:&#xA;                                    {&#xA;                                        switch (strBranch)&#xA;                                        {&#xA;&#xA;                                            case &quot;154&quot;:&#xA;                                            case &quot;166&quot;:&#xA;                                            case &quot;178&quot;:&#xA;                                            case &quot;181&quot;:&#xA;                                            case &quot;183&quot;:&#xA;                                            case &quot;191&quot;:&#xA;                                            case &quot;192&quot;:&#xA;                                            case &quot;503&quot;:&#xA;                                            case &quot;505&quot;:&#xA;                                            case &quot;507&quot;:&#xA;                                            case &quot;515&quot;:&#xA;                                            case &quot;516&quot;:&#xA;                                            case &quot;527&quot;:&#xA;                                            case &quot;539&quot;:&#xA;                                                {&#xA;                                                    fCheckBankAccountValidity = 1;&#xA;                                                    break;&#xA;                                                }&#xA;                                        } //end switch&#xA;                                        break;&#xA;                                    }&#xA;                                default:&#xA;                                    {&#xA;                                        lngTotal = Convert.ToInt32(double.Parse(strArrayAccount[0])) * 9 + Convert.ToInt32(double.Parse(strArrayAccount[1])) * 8 + Convert.ToInt32(double.Parse(strArrayAccount[2])) * 7 + Convert.ToInt32(double.Parse(strArrayAccount[3])) * 6 + Convert.ToInt32(double.Parse(strArrayAccount[4])) * 5 + Convert.ToInt32(double.Parse(strArrayAccount[5])) * 4 + Convert.ToInt32(double.Parse(strArrayAccount[6])) * 3 + Convert.ToInt32(double.Parse(strArrayAccount[7])) * 2 + Convert.ToInt32(double.Parse(strArrayAccount[8])) * 1;&#xA;                                        if (lngTotal % 11 == 0)&#xA;                                        {&#xA;                                            fCheckBankAccountValidity = 1;&#xA;                                        }&#xA;                                        else&#xA;                                        {&#xA;                                            lngTotal = Convert.ToInt32(double.Parse(strArrayAccount[3])) * 6 + Convert.ToInt32(double.Parse(strArrayAccount[4])) * 5 + Convert.ToInt32(double.Parse(strArrayAccount[5])) * 4 + Convert.ToInt32(double.Parse(strArrayAccount[6])) * 3 + Convert.ToInt32(double.Parse(strArrayAccount[7])) * 2 + Convert.ToInt32(double.Parse(strArrayAccount[8])) * 1;&#xA;                                            if (lngTotal % 11 == 0)&#xA;                                            {&#xA;                                                fCheckBankAccountValidity = 1;&#xA;                                            }&#xA;                                        }&#xA;                                        break;&#xA;                                    }&#xA;                            } //end switch&#xA;                            break;&#xA;                        }&#xA;                    case 14:&#xA;                        {&#xA;                            lngTotal = Convert.ToInt32(double.Parse(strArrayBranch[0])) * 9 + Convert.ToInt32(double.Parse(strArrayBranch[1])) * 8 + Convert.ToInt32(double.Parse(strArrayBranch[2])) * 7 + Convert.ToInt32(double.Parse(strArrayAccount[3])) * 6 + Convert.ToInt32(double.Parse(strArrayAccount[4])) * 5 + Convert.ToInt32(double.Parse(strArrayAccount[5])) * 4 + Convert.ToInt32(double.Parse(strArrayAccount[6])) * 3 + Convert.ToInt32(double.Parse(strArrayAccount[7])) * 2 + Convert.ToInt32(double.Parse(strArrayAccount[8])) * 1;&#xA;                            switch (lngTotal % 11)&#xA;                            {&#xA;&#xA;                                case 0:&#xA;                                    {&#xA;                                        fCheckBankAccountValidity = 1;&#xA;                                        break;&#xA;                                    }&#xA;                                case 2:&#xA;                                    {&#xA;                                        switch (strBranch)&#xA;                                        {&#xA;&#xA;                                            case &quot;347&quot;:&#xA;                                            case &quot;361&quot;:&#xA;                                            case &quot;362&quot;:&#xA;                                            case &quot;363&quot;:&#xA;                                            case &quot;365&quot;:&#xA;                                            case &quot;385&quot;:&#xA;                                                {&#xA;                                                    fCheckBankAccountValidity = 1;&#xA;                                                    break;&#xA;                                                }&#xA;                                        } //end switch&#xA;                                        break;&#xA;                                    }&#xA;                                case 4:&#xA;                                    {&#xA;                                        switch (strBranch)&#xA;                                        {&#xA;&#xA;                                            case &quot;361&quot;:&#xA;                                            case &quot;362&quot;:&#xA;                                            case &quot;363&quot;:&#xA;                                                {&#xA;                                                    fCheckBankAccountValidity = 1;&#xA;                                                    break;&#xA;                                                }&#xA;                                        } //end switch&#xA;                                        break;&#xA;                                    }&#xA;                                default:&#xA;                                    {&#xA;                                        lngTotal = Convert.ToInt32(double.Parse(strArrayAccount[0])) * 9 + Convert.ToInt32(double.Parse(strArrayAccount[1])) * 8 + Convert.ToInt32(double.Parse(strArrayAccount[2])) * 7 + Convert.ToInt32(double.Parse(strArrayAccount[3])) * 6 + Convert.ToInt32(double.Parse(strArrayAccount[4])) * 5 + Convert.ToInt32(double.Parse(strArrayAccount[5])) * 4 + Convert.ToInt32(double.Parse(strArrayAccount[6])) * 3 + Convert.ToInt32(double.Parse(strArrayAccount[7])) * 2 + Convert.ToInt32(double.Parse(strArrayAccount[8])) * 1;&#xA;                                        if (lngTotal % 11 == 0)&#xA;                                        {&#xA;                                            fCheckBankAccountValidity = 1;&#xA;                                        }&#xA;                                        else&#xA;                                        {&#xA;                                            lngTotal = Convert.ToInt32(double.Parse(strArrayAccount[3])) * 6 + Convert.ToInt32(double.Parse(strArrayAccount[4])) * 5 + Convert.ToInt32(double.Parse(strArrayAccount[5])) * 4 + Convert.ToInt32(double.Parse(strArrayAccount[6])) * 3 + Convert.ToInt32(double.Parse(strArrayAccount[7])) * 2 + Convert.ToInt32(double.Parse(strArrayAccount[8])) * 1;&#xA;                                            if (lngTotal % 11 == 0)&#xA;                                            {&#xA;                                                fCheckBankAccountValidity = 1;&#xA;                                            }&#xA;                                        }&#xA;                                        break;&#xA;                                    }&#xA;                            } //end switch&#xA;                            break;&#xA;                        }&#xA;                } //end switch&#xA;&#xA;&#xA;                return fCheckBankAccountValidity;&#xA;&#xA;            }&#xA;            catch &#xA;            {   // Err_בדיקה:&#xA;&#xA;                fCheckBankAccountValidity = 2;&#xA;                return fCheckBankAccountValidity;&#xA;&#xA;            }&#xA;&#xA;        }&#xA;&#xA;&#x9;}&#xA;&#xA;"/>
                  <CompiledCode val="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DwAACigQAAAKG1pYCRiaKA8AAAooEAAAChpaWAkZmigPAAAKKBAAAAoZWlgJGpooDwAACigQAAAKGFpYCRuaKA8AAAooEAAAClgMCB8LXRMPEQ9FBwAAAAIAAAAJAAAAAgAAAAkAAAACAAAACQAAAAIAAAArBxcKOAkKAAAWCjgCCgAAEQQWmigPAAAKKBAAAAofCVoRBBeaKA8AAAooEAAACh5aWBEEGJooDwAACigQAAAKHVpYCRaaKA8AAAooEAAAChxaWAkXmigPAAAKKBAAAAobWlgJGJooDwAACigQAAAKGlpYCRmaKA8AAAooEAAAChlaWAkamigPAAAKKBAAAAoYWlgJG5ooDwAACigQAAAKWAwIHwtdExAREEUDAAAAAgAAAAkAAAACAAAAKwcXCjhOCQAAFgo4RwkAAAkWmigPAAAKKBAAAAofCVoJF5ooDwAACigQAAAKHlpYCRiaKA8AAAooEAAACh1aWAkZmigPAAAKKBAAAAocWlgJGpooDwAACigQAAAKG1pYCRuaKA8AAAooEAAAChpaWAkcmigPAAAKKBAAAAoZWlgJHZooDwAACigQAAAKGFpYCR6aKA8AAAooEAAAClgMCB8LXRMRERFFBQAAAAUAAACXCAAABQAAAJcIAAAFAAAAOJIIAAAXCjiLCAAAEQQWmigPAAAKKBAAAAofCVoRBBeaKA8AAAooEAAACh5aWBEEGJooDwAACigQAAAKHVpYCRaaKA8AAAooEAAAChxaWAkXmigPAAAKKBAAAAobWlgJGJooDwAACigQAAAKGlpYCRmaKA8AAAooEAAAChlaWAkamigPAAAKKBAAAAoYWlgJG5ooDwAACigQAAAKWAwIHwtdExIREkUFAAAABQAAANgHAAAFAAAA2AcAAAUAAAA40wcAABcKOMwHAAAJFpooDwAACigQAAAKHwlaCReaKA8AAAooEAAACh5aWAkYmigPAAAKKBAAAAodWlgJGZooDwAACigQAAAKHFpYCRqaKA8AAAooEAAAChtaWAkbmigPAAAKKBAAAAoaWlgJHJooDwAACigQAAAKGVpYCR2aKA8AAAooEAAAChhaWAkemigPAAAKKBAAAApYDAgfC10TExETFi4HERMcLgkrDhcKOCQHAAAXCjgdBwAACRmaKA8AAAooEAAAChxaCRqaKA8AAAooEAAAChtaWAkbmigPAAAKKBAAAAoaWlgJHJooDwAACigQAAAKGVpYCR2aKA8AAAooEAAAChhaWAkemigPAAAKKBAAAApYDAgfC10TFBEUFi4KERQcLgw4qgYAABcKOKMGAAAXCjicBgAACRaaKA8AAAooEAAACh8JWgkXmigPAAAKKBAAAAoeWlgJGJooDwAACigQAAAKHVpYCRmaKA8AAAooEAAAChxaWAkamigPAAAKKBAAAAobWlgJG5ooDwAACigQAAAKGlpYCRyaKA8AAAooEAAAChlaWAkdmigPAAAKKBAAAAoYWlgJHpooDwAACigQAAAKWAwIHwpdOgQGAAAXCjj9BQAAFwo49gUAAAkWmigPAAAKKBAAAAoZWgkXmigPAAAKKBAAAAoYWlgJGJooDwAACigQAAAKHVpYCRmaKA8AAAooEAAAChxaWAkamigPAAAKKBAAAAobWlgJG5ooDwAACigQAAAKGlpYCRyaKA8AAAooEAAAChlaWAkdmigPAAAKKBAAAAoYWlgMHwsIHwtdWQkemigPAAAKKBAAAApAXQUAABcKOFYFAAARBBaaKA8AAAooEAAACh8JWhEEF5ooDwAACigQAAAKHlpYEQQYmigPAAAKKBAAAAodWlgJGZooDwAACigQAAAKHFpYCRqaKA8AAAooEAAAChtaWAkbmigPAAAKKBAAAAoaWlgJHJooDwAACigQAAAKGVpYCR2aKA8AAAooEAAAChhaWAkemigPAAAKKBAAAApYDAgfC10TFREVRQMAAAAFAAAAPQEAAAwAAAA4OAEAABcKOJ8EAAARBiUTFjmVBAAA/hN+AwAABDq7AAAAHw5zFAAACiVyIwAAcBYoFQAACiVyKwAAcBcoFQAACiVyMwAAcBgoFQAACiVyOwAAcBkoFQAACiVyQwAAcBooFQAACiVySwAAcBsoFQAACiVyUwAAcBwoFQAACiVyWwAAcB0oFQAACiVyYwAAcB4oFQAACiVyawAAcB8JKBUAAAolcnMAAHAfCigVAAAKJXJ7AABwHwsoFQAACiVygwAAcB8MKBUAAAolcosAAHAfDSgVAAAK/hOAAwAABP4TfgMAAAQRFhIXKBYAAAo5uQMAABEXRQ4AAAAFAAAABQAAAAUAAAAFAAAABQAAAAUAAAAFAAAABQAAAAUAAAAFAAAABQAAAAUAAAAFAAAABQAAADh1AwAAFwo4bgMAAAkWmigPAAAKKBAAAAofCVoJF5ooDwAACigQAAAKHlpYCRiaKA8AAAooEAAACh1aWAkZmigPAAAKKBAAAAocWlgJGpooDwAACigQAAAKG1pYCRuaKA8AAAooEAAAChpaWAkcmigPAAAKKBAAAAoZWlgJHZooDwAACigQAAAKGFpYCR6aKA8AAAooEAAAClgMCB8LXS0HFwo40gIAAAkZmigPAAAKKBAAAAocWgkamigPAAAKKBAAAAobWlgJG5ooDwAACigQAAAKGlpYCRyaKA8AAAooEAAAChlaWAkdmigPAAAKKBAAAAoYWlgJHpooDwAACigQAAAKWAwIHwtdOmsCAAAXCjhkAgAAEQQWmigPAAAKKBAAAAofCVoRBBeaKA8AAAooEAAACh5aWBEEGJooDwAACigQAAAKHVpYCRmaKA8AAAooEAAAChxaWAkamigPAAAKKBAAAAobWlgJG5ooDwAACigQAAAKGlpYCRyaKA8AAAooEAAAChlaWAkdmigPAAAKKBAAAAoYWlgJHpooDwAACigQAAAKWAwIHwtdExgRGEUFAAAABQAAALIAAAAMAAAAsgAAAHQAAAA4rQAAABcKOKUBAAARBiUTGTmbAQAAERlykwAAcCgSAAAKLUkRGXKbAABwKBIAAAotOxEZcqMAAHAoEgAACi0tERlyqwAAcCgSAAAKLR8RGXKzAABwKBIAAAotEREZcrsAAHAoEgAACjlEAQAAFwo4PQEAABEGJRMaOTMBAAARGnKbAABwKBIAAAotHxEacqMAAHAoEgAACi0RERpyqwAAcCgSAAAKOQYBAAAXCjj/AAAACRaaKA8AAAooEAAACh8JWgkXmigPAAAKKBAAAAoeWlgJGJooDwAACigQAAAKHVpYCRmaKA8AAAooEAAAChxaWAkamigPAAAKKBAAAAobWlgJG5ooDwAACigQAAAKGlpYCRyaKA8AAAooEAAAChlaWAkdmigPAAAKKBAAAAoYWlgJHpooDwAACigQAAAKWAwIHwtdLQQXCitmCRmaKA8AAAooEAAAChxaCRqaKA8AAAooEAAAChtaWAkbmigPAAAKKBAAAAoaWlgJHJooDwAACigQAAAKGVpYCR2aKA8AAAooEAAAChhaWAkemigPAAAKKBAAAApYDAgfC10tAhcKBhMK3ggmGAoGEwreABEKKgAAQRwAAAAAAAAAAAAABw8AAAcPAAAIAAAAAQAAAUJTSkIBAAEAAAAAAAwAAAB2NC4wLjMwMzE5AAAAAAUAbAAAAGgCAAAjfgAA1AIAACQDAAAjU3RyaW5ncwAAAAD4BQAAxAAAACNVUwC8BgAAEAAAACNHVUlEAAAAzAYAACgBAAAjQmxvYgAAAAAAAAACAAABVxUCCAkIAAAA+iUzABYAAAEAAAAPAAAAAwAAAAMAAAAEAAAACAAAABYAAAAHAAAAAgAAAAIAAAABAAAAAwAAAAIAAAAAAAoAAQAAAAAABgAvACgABgC0AJQABgDaAJQABgAiASgABgBQAZQABgCxASgABgC/ASgABgDHASgACgDvAdkBCgAFAtkBDgA7Ai8CBgBhAkYCBgB+AigABgCTAigABgDwAkYCAAAAAAEAAAAAAAEAAQCBARAAFwAAAAUAAQABAAAAAACrAgAABQADAAUAEQApASoAEQCKASoAEwD9Ar0AUCAAAAAAlgA2AAoAAQCAIAAAAACWADsAEQAEAGsgAAAAAJEAAQElAAcAdCAAAAAAkQBrASUACAAAAAEAVAAAAAIAYAAAAAMAaAAAAAEAcQAAAAIAfwAAAAMAiQAAAAEAIAEAAAEAIAERANQAGAAZANQAHQApANQAHQAxALYBNwA5ALYBOwBBAM4BQABJAPcBTQBBAP4BUwBJAA8CWQBBABcCYQAMANQAbQBZAG8CcwBZAHYCkABBAP4BoQBpAIUCpwA5AIsCrABxALYBNwBBAJkCsQBJAKUCtwAUANQAGAAUABEDzAAUABUD1AAhABsAMgAuAAsA/gAuABMABwFBABsAMgBgABsAMgBjABsAMgCAABsAMgAhAN0AZgDFAASAAAAAAAAAAAAAAAAAAAAAAPgAAAAEAAAAAAAAAAAAAAABAB8AAAAAAAoAAAAAAAAAAAAAAEQA2QEAAAAABAAAAAAAAAAAAAAAAQAjAgAAAAAZAIsAGwCdAAAAAAAAPE1vZHVsZT4AYWpnYnpiMHYuZGxsAFNuaXBwZXQAbXNjb3JsaWIAU3lzdGVtAE9iamVjdABmdW5jAENoZWNrQmFua0FjY291bnRWYWxpZGl0eQBfQmFua051bWJlcgBfQnJhbmNoAF9BY2NvdW50AGxuZ0JhbmtOdW1iZXIAbG5nQnJhbmNoAGxuZ0FjY291bnQAU3lzdGVtLlJ1bnRpbWUuQ29tcGlsZXJTZXJ2aWNlcwBDb21waWxhdGlvblJlbGF4YXRpb25zQXR0cmlidXRlAC5jdG9yAFJ1bnRpbWVDb21wYXRpYmlsaXR5QXR0cmlidXRlAGFqZ2J6YjB2ADxDaGVja0JhbmtBY2NvdW50VmFsaWRpdHk+Yl9fMABjAEZ1bmNgMgBDUyQ8PjlfX0NhY2hlZEFub255bW91c01ldGhvZERlbGVnYXRlMgBDb21waWxlckdlbmVyYXRlZEF0dHJpYnV0ZQA8Q2hlY2tCYW5rQWNjb3VudFZhbGlkaXR5PmJfXzEAQ1MkPD45X19DYWNoZWRBbm9ueW1vdXNNZXRob2REZWxlZ2F0ZTMAQ2hhcgBUb1N0cmluZwBDb252ZXJ0AFN0cmluZwBnZXRfTGVuZ3RoAE1pY3Jvc29mdC5WaXN1YWxCYXNpYwBTdHJpbmdzAFN0ckR1cABDb25jYXQAVmJTdHJDb252AFN0ckNvbnYAVG9DaGFyQXJyYXkAU3lzdGVtLkNvcmUAU3lzdGVtLkxpbnEARW51bWVyYWJsZQBTeXN0ZW0uQ29sbGVjdGlvbnMuR2VuZXJpYwBJRW51bWVyYWJsZWAxAFNlbGVjdABUb0FycmF5AERvdWJsZQBQYXJzZQBUb0ludDMyAEludDMyAG9wX0VxdWFsaXR5AFJpZ2h0ADxQcml2YXRlSW1wbGVtZW50YXRpb25EZXRhaWxzPntCRkU1NDYwOC0xMjJFLTQzNkQtODcxOC1FN0ZCMzYwQ0VBMUZ9AERpY3Rpb25hcnlgMgAkJG1ldGhvZDB4NjAwMDAwMi0xAEFkZABUcnlHZXRWYWx1ZQAAAAAAAzAAAAU5ADAAAAU3ADIAAAU3ADAAAAU2ADAAAAUyADAAAAcxADUANAAABzEANgA2AAAHMQA3ADgAAAcxADgAMQAABzEAOAAzAAAHMQA5ADEAAAcxADkAMgAABzUAMAAzAAAHNQAwADUAAAc1ADAANwAABzUAMQA1AAAHNQAxADYAAAc1ADIANwAABzUAMwA5AAAHMwA0ADcAAAczADYAMQAABzMANgAyAAAHMwA2ADMAAAczADYANQAABzMAOAA1AAAACEblvy4SbUOHGOf7NgzqHwAIt3pcVhk04IkGAAMNDQ0NBgADCAgICAQgAQEIAyAAAQMHAQgEAAEOAwcGFRIRAgMOBAEAAAADIAAOBAABDggDIAAICLA/X38R1Qo6BQACDggOBQACDg4OBwADDg4RKQgEIAAdAwYVEhECAw4FIAIBHBgXEAICFRIxAR4BFRIxAR4AFRIRAh4AHgEECgIDDgwQAQEdHgAVEjEBHgADCgEOBQABDh0OBAABDQ4EAAEIDQUAAgIODgUAAg4OCAcGFRI9Ag4IBhUSPQIOCAcgAgETABMBCCACAhMAEBMBIAcbCAgIHQ4dDg4ODg4ICAgIHQ4OCAgICAgICA4ICA4OCAEACAAAAAAAHgEAAQBUAhZXcmFwTm9uRXhjZXB0aW9uVGhyb3dzAQAA2DcAAAAAAAAAAAAA7jcAAAAgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAOA3AAAAAAAAAABfQ29yRGxsTWFpbgBtc2NvcmVlLmRsbAAAAAAA/ygAAAAAAAAAAAAAAAAAAAAQABAAAAMAAAgAAAAAAAAAAAAAAAAAAAAQAAAAAASAAAAFhAAABMAgAAAAAAAAAAAABMAjQAAABWAFMAXwBWAEUAUgBTAEkATwBOAF8ASQBOAEYATwAAAAAAvQTv/gAAAQAAAAAAAAAAAAAAAAAAAAAAPwAAAAAAAAAEAAAAAgAAAAAAAAAAAAAAAAAAAEQAAAABAFYAYQByAEYAaQBsAGUASQBuAGYAbwAAAAAAJAAEAAAAVAByAGEAbgBzAGwAYQB0AGkAbwBuAAAAAAAAALAErAEAAAEAUwB0AHIAaQBuAGcARgBpAGwAZQBJAG4AZgBvAAAAiAEAAAEAMAAwADAAMAAwADQAYgAwAAAALAACAAEARgBpAGwAZQBEAGUAcwBjAHIAaQBwAHQAaQBvAG4AAAAAACAAAAAwAAgAAQBGAGkAbABlAFYAZQByAHMAaQBvAG4AAAAAADAALgAwAC4AMAAuADAAAAA8AA0AAQBJAG4AdABlAHIAbgBhAGwATgBhAG0AZQAAAGEAagBnAGIAegBiADAAdgAuAGQAbABsAAAAAAAoAAIAAQBMAGUAZwBhAGwAQwBvAHAAeQByAGkAZwBoAHQAAAAgAAAARAANAAEATwByAGkAZwBpAG4AYQBsAEYAaQBsAGUAbgBhAG0AZQAAAGEAagBnAGIAegBiADAAdgAuAGQAbABsAAAAAAA0AAgAAQBQAHIAbwBkAHUAYwB0AFYAZQByAHMAaQBvAG4AAAAwAC4AMAAuADAALgAwAAAAOAAIAAEAQQBzAHMAZQBtAGIAbAB5ACAAVgBlAHIAcwBpAG8AbgAAADAALgAwAC4AMAAu
                  <SnippetLanguage val="C"/>
                  <ForCompactFramework val="N"/>
                  <isGuiThreadExecution val="Y"/>
                  <CompileTime HighDateTime="31002578" LowDateTime="3835900732"/>
                  <AssemblyIds val="985135706,-612915800,"/>
                  <RetainFocus val="Y"/>
                  <Condition val="Y"/>
                  <Modifier val="B"/>
                  <Direction val="C"/>
                </Invoke>
              </LogicLine>
              <LogicLine>
                <BLOCK EndBlock="30" EndBlockSegment="30" FlowIsn="29" Type="I">
                  <Condition Exp="9"/>
                  <Modifier val="B"/>
                  <Direction val="C"/>
                </BLOCK>
              </LogicLine>
              <LogicLine>
                <STP Buttons="O" DefaultButton="1" ERR_LOG_DEF_CHG="N" Exp="2" FlowIsn="10" IMG_DEF_CHG="N" Image="E" Mode="W" TTL_DEF_CHG="N" TitleTxt="Warning" VR_DISP="B">
                  <AppendToErrorLog val="N"/>
                  <Condition Exp="3"/>
                  <Modifier val="B"/>
                  <Direction val="C"/>
                </STP>
              </LogicLine>
              <LogicLine>
                <STP Buttons="O" DefaultButton="1" ERR_LOG_DEF_CHG="N" FlowIsn="15" IMG_DEF_CHG="N" Image="C" Mode="E" TTL_DEF_CHG="N" TXT="פרטי חשבון שגויים" TitleTxt="Error" VR_DISP="B">
                  <AppendToErrorLog val="Y"/>
                  <Condition Exp="4"/>
                  <Modifier val="B"/>
                  <Direction val="C"/>
                </STP>
              </LogicLine>
              <LogicLine>
                <END_BLK FlowIsn="30"/>
              </LogicLine>
              <LogicLine>
                <END_BLK FlowIsn="17"/>
              </LogicLine>
            </LogicLines>
          </LogicUnit>
        </TaskLogic>
        <TaskForms>
          <FormEntry id="1">
            <PropertyList model="FORM_GUI0">
              <_Comment id="218"/>
              <FormName id="311" valUnicode="בדיקת תקינות חשבון בנק .NET"/>
            </PropertyList>
          </FormEntry>
        </TaskForms>
        <Expressions>
          <Expression id="7">
            <ExpSyntax val="{0,3}=0"/>
            <ExpAttribute val="B"/>
          </Expression>
          <Expression id="6">
            <ExpSyntax val="{0,2}=0"/>
            <ExpAttribute val="B"/>
          </Expression>
          <Expression id="5">
            <ExpSyntax val="{0,1}=0"/>
            <ExpAttribute val="B"/>
          </Expression>
          <Expression id="4">
            <ExpSyntax val="{0,4}&lt;>1"/>
            <ExpAttribute val="B"/>
          </Expression>
          <Expression id="2">
            <ExpSyntax val="DNException().Message"/>
            <ExpAttribute val="O"/>
          </Expression>
          <Expression id="3">
            <ExpSyntax val="DNExceptionOccurred()"/>
            <ExpAttribute val="B"/>
          </Expression>
          <Expression id="8">
            <ExpSyntax val="{0,4}=1"/>
            <ExpAttribute val="B"/>
          </Expression>
          <Expression id="9">
            <ExpSyntax val="NOT {0,5}"/>
            <ExpAttribute val="B"/>
          </Expression>
        </Expressions>
      </Task>
    </Programs>
  </ProgramsRepository>

</Application>
